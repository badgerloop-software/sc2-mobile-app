name: SC2 Mobile App - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Lint code
      run: |
        # Install ESLint if not present
        if ! npm list eslint --depth=0 2>/dev/null; then
          npm install --save-dev eslint @babel/eslint-parser
        fi
        # Run linting (will skip if no .eslintrc config exists)
        npx eslint src/ --ext .js,.jsx,.ts,.tsx --max-warnings 0 || echo "ESLint not configured, skipping..."
    
    - name: Type checking (if TypeScript)
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
        else
          echo "No TypeScript configuration found, skipping type checking"
        fi
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
    
    - name: Check Expo configuration
      run: npx expo config --type public
    
    - name: Check for Expo SDK compatibility
      run: npx expo install --check
    
    - name: Build for Android (Development)
      run: |
        # Test if the JavaScript bundle can be created for Android
        npx expo export --platform android --dev || echo "Android export failed, continuing..."
      continue-on-error: true
    
    - name: Build for iOS (Development)
      run: |
        # Test if the JavaScript bundle can be created for iOS
        npx expo export --platform ios --dev || echo "iOS export failed, continuing..."
      continue-on-error: true
    
    - name: Test bundle creation
      run: |
        # Test if the JavaScript bundle can be created
        npx expo export --platform all --dev || echo "Bundle creation failed"
      continue-on-error: true
    
    - name: Check bundle size
      run: |
        # Check if bundle size is reasonable
        npx expo export --platform all --dev
        if [ -d "dist" ]; then
          du -sh dist/
          # Warn if bundle is too large (> 50MB)
          size=$(du -s dist/ | cut -f1)
          if [ $size -gt 51200 ]; then
            echo "Warning: Bundle size is quite large ($size KB)"
          fi
        fi
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check package.json validity
      run: npm ls --depth=0
    
    - name: Check for unused dependencies
      run: |
        # Install depcheck to find unused dependencies
        npm install -g depcheck
        depcheck --ignores="@babel/core,@expo/cli,expo-cli"
      continue-on-error: true
    
    - name: Security scan
      run: |
        # Run security audit
        npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check file structure
      run: |
        # Verify essential files exist
        test -f package.json || exit 1
        test -f app.json || test -f expo.json || exit 1
        test -d src/ || exit 1
        test -f src/screens/HomeScreen.js || exit 1
        test -f src/screens/BatteryScreen.js || exit 1
        test -f src/data/telemetryData.js || exit 1
        echo "File structure validation passed"
    
    - name: Check for TODO/FIXME comments
      run: |
        # Find TODO and FIXME comments
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME" src/ --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" || echo "No TODO/FIXME comments found"

  expo-checks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
    
    - name: Validate Expo configuration
      run: |
        # Check if app.json/expo.json is valid
        npx expo config --type public
    
    - name: Check for Expo SDK compatibility
      run: |
        # Verify all dependencies are compatible with current Expo SDK
        npx expo install --check
      continue-on-error: true
    
    - name: Validate Metro configuration
      run: |
        # Check if Metro bundler configuration is valid
        if [ -f "metro.config.js" ]; then
          node -e "require('./metro.config.js')"
        fi
    
    - name: Test Expo start (dry run)
      run: |
        # Test if Expo can start without errors
        timeout 30s npx expo start --no-dev --minify || echo "Expo start test completed"
